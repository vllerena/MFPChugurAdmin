/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/form-imagecrop.init.js":
/*!***************************************************!*\
  !*** ./resources/js/pages/form-imagecrop.init.js ***!
  \***************************************************/
/***/ (() => {

eval("/*\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\nAuthor: CoderThemes\nWebsite: https://coderthemes.com/\nContact: support@coderthemes.com\nFile: Image crop init js\n*/\n$(function () {\n  'use strict';\n\n  var console = window.console || {\n    log: function log() {}\n  };\n  var URL = window.URL || window.webkitURL;\n  var $image = $('#image');\n  var $download = $('#download');\n  var $dataX = $('#dataX');\n  var $dataY = $('#dataY');\n  var $dataHeight = $('#dataHeight');\n  var $dataWidth = $('#dataWidth');\n  var $dataRotate = $('#dataRotate');\n  var $dataScaleX = $('#dataScaleX');\n  var $dataScaleY = $('#dataScaleY');\n  var options = {\n    aspectRatio: 16 / 9,\n    preview: '.img-preview',\n    crop: function crop(e) {\n      $dataX.val(Math.round(e.detail.x));\n      $dataY.val(Math.round(e.detail.y));\n      $dataHeight.val(Math.round(e.detail.height));\n      $dataWidth.val(Math.round(e.detail.width));\n      $dataRotate.val(e.detail.rotate);\n      $dataScaleX.val(e.detail.scaleX);\n      $dataScaleY.val(e.detail.scaleY);\n    }\n  };\n  var originalImageURL = $image.attr('src');\n  var uploadedImageName = 'cropped.jpg';\n  var uploadedImageType = 'image/jpeg';\n  var uploadedImageURL; // Tooltip\n\n  $('[data-toggle=\"tooltip\"]').tooltip(); // Cropper\n\n  $image.on({\n    ready: function ready(e) {\n      console.log(e.type);\n    },\n    cropstart: function cropstart(e) {\n      console.log(e.type, e.detail.action);\n    },\n    cropmove: function cropmove(e) {\n      console.log(e.type, e.detail.action);\n    },\n    cropend: function cropend(e) {\n      console.log(e.type, e.detail.action);\n    },\n    crop: function crop(e) {\n      console.log(e.type);\n    },\n    zoom: function zoom(e) {\n      console.log(e.type, e.detail.ratio);\n    }\n  }).cropper(options); // Buttons\n\n  if (!$.isFunction(document.createElement('canvas').getContext)) {\n    $('button[data-method=\"getCroppedCanvas\"]').prop('disabled', true);\n  }\n\n  if (typeof document.createElement('cropper').style.transition === 'undefined') {\n    $('button[data-method=\"rotate\"]').prop('disabled', true);\n    $('button[data-method=\"scale\"]').prop('disabled', true);\n  } // Download\n\n\n  if (typeof $download[0].download === 'undefined') {\n    $download.addClass('disabled');\n  } // Options\n\n\n  $('.docs-toggles').on('change', 'input', function () {\n    var $this = $(this);\n    var name = $this.attr('name');\n    var type = $this.prop('type');\n    var cropBoxData;\n    var canvasData;\n\n    if (!$image.data('cropper')) {\n      return;\n    }\n\n    if (type === 'checkbox') {\n      options[name] = $this.prop('checked');\n      cropBoxData = $image.cropper('getCropBoxData');\n      canvasData = $image.cropper('getCanvasData');\n\n      options.ready = function () {\n        $image.cropper('setCropBoxData', cropBoxData);\n        $image.cropper('setCanvasData', canvasData);\n      };\n    } else if (type === 'radio') {\n      options[name] = $this.val();\n    }\n\n    $image.cropper('destroy').cropper(options);\n  }); // Methods\n\n  $('.docs-buttons').on('click', '[data-method]', function () {\n    var $this = $(this);\n    var data = $this.data();\n    var cropper = $image.data('cropper');\n    var cropped;\n    var $target;\n    var result;\n\n    if ($this.prop('disabled') || $this.hasClass('disabled')) {\n      return;\n    }\n\n    if (cropper && data.method) {\n      data = $.extend({}, data); // Clone a new one\n\n      if (typeof data.target !== 'undefined') {\n        $target = $(data.target);\n\n        if (typeof data.option === 'undefined') {\n          try {\n            data.option = JSON.parse($target.val());\n          } catch (e) {\n            console.log(e.message);\n          }\n        }\n      }\n\n      cropped = cropper.cropped;\n\n      switch (data.method) {\n        case 'rotate':\n          if (cropped && options.viewMode > 0) {\n            $image.cropper('clear');\n          }\n\n          break;\n\n        case 'getCroppedCanvas':\n          if (uploadedImageType === 'image/jpeg') {\n            if (!data.option) {\n              data.option = {};\n            }\n\n            data.option.fillColor = '#fff';\n          }\n\n          break;\n      }\n\n      result = $image.cropper(data.method, data.option, data.secondOption);\n\n      switch (data.method) {\n        case 'rotate':\n          if (cropped && options.viewMode > 0) {\n            $image.cropper('crop');\n          }\n\n          break;\n\n        case 'scaleX':\n        case 'scaleY':\n          $(this).data('option', -data.option);\n          break;\n\n        case 'getCroppedCanvas':\n          if (result) {\n            // Bootstrap's Modal\n            $('#getCroppedCanvasModal').modal().find('.modal-body').html(result);\n\n            if (!$download.hasClass('disabled')) {\n              download.download = uploadedImageName;\n              $download.attr('href', result.toDataURL(uploadedImageType));\n            }\n          }\n\n          break;\n\n        case 'destroy':\n          if (uploadedImageURL) {\n            URL.revokeObjectURL(uploadedImageURL);\n            uploadedImageURL = '';\n            $image.attr('src', originalImageURL);\n          }\n\n          break;\n      }\n\n      if ($.isPlainObject(result) && $target) {\n        try {\n          $target.val(JSON.stringify(result));\n        } catch (e) {\n          console.log(e.message);\n        }\n      }\n    }\n  }); // Keyboard\n\n  $(document.body).on('keydown', function (e) {\n    if (e.target !== this || !$image.data('cropper') || this.scrollTop > 300) {\n      return;\n    }\n\n    switch (e.which) {\n      case 37:\n        e.preventDefault();\n        $image.cropper('move', -1, 0);\n        break;\n\n      case 38:\n        e.preventDefault();\n        $image.cropper('move', 0, -1);\n        break;\n\n      case 39:\n        e.preventDefault();\n        $image.cropper('move', 1, 0);\n        break;\n\n      case 40:\n        e.preventDefault();\n        $image.cropper('move', 0, 1);\n        break;\n    }\n  }); // Import image\n\n  var $inputImage = $('#inputImage');\n\n  if (URL) {\n    $inputImage.change(function () {\n      var files = this.files;\n      var file;\n\n      if (!$image.data('cropper')) {\n        return;\n      }\n\n      if (files && files.length) {\n        file = files[0];\n\n        if (/^image\\/\\w+$/.test(file.type)) {\n          uploadedImageName = file.name;\n          uploadedImageType = file.type;\n\n          if (uploadedImageURL) {\n            URL.revokeObjectURL(uploadedImageURL);\n          }\n\n          uploadedImageURL = URL.createObjectURL(file);\n          $image.cropper('destroy').attr('src', uploadedImageURL).cropper(options);\n          $inputImage.val('');\n        } else {\n          window.alert('Please choose an image file.');\n        }\n      }\n    });\n  } else {\n    $inputImage.prop('disabled', true).parent().addClass('disabled');\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/form-imagecrop.init.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/form-imagecrop.init.js"]();
/******/ 	
/******/ })()
;