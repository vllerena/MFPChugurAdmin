/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/ecommerce-dashboard.init.js":
/*!********************************************************!*\
  !*** ./resources/js/pages/ecommerce-dashboard.init.js ***!
  \********************************************************/
/***/ (() => {

eval("/*\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\nAuthor: CoderThemes\nWebsite: https://coderthemes.com/\nContact: support@coderthemes.com\nFile: Ecommerce Dashboard init js\n*/\n!function ($) {\n  \"use strict\";\n\n  var Dashboard = function Dashboard() {\n    this.$body = $(\"body\"), this.charts = [];\n  };\n\n  Dashboard.prototype.initCharts = function () {\n    window.Apex = {\n      chart: {\n        parentHeightOffset: 0,\n        toolbar: {\n          show: false\n        }\n      },\n      grid: {\n        padding: {\n          left: 0,\n          right: 0\n        }\n      },\n      colors: [\"#727cf5\", \"#0acf97\", \"#fa5c7c\", \"#ffbc00\"]\n    };\n    var colors = [\"#727cf5\", \"#0acf97\", \"#fa5c7c\", \"#ffbc00\"];\n    var dataColors = $(\"#revenue-chart\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    var options = {\n      chart: {\n        height: 363,\n        type: 'line',\n        dropShadow: {\n          enabled: true,\n          opacity: 0.2,\n          blur: 7,\n          left: -7,\n          top: 7\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth',\n        width: 4\n      },\n      series: [{\n        name: 'Current Week',\n        type: 'area',\n        data: [10, 20, 15, 25, 20, 30, 20]\n      }, {\n        name: 'Previous Week',\n        type: 'line',\n        data: [0, 15, 10, 30, 15, 35, 25]\n      }],\n      fill: {\n        type: 'solid',\n        opacity: [0.35, 1]\n      },\n      colors: colors,\n      zoom: {\n        enabled: false\n      },\n      legend: {\n        show: false\n      },\n      xaxis: {\n        type: 'string',\n        categories: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n        tooltip: {\n          enabled: false\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          formatter: function formatter(val) {\n            return val + \"k\";\n          },\n          offsetX: -15\n        }\n      }\n    };\n    var chart = new ApexCharts(document.querySelector(\"#revenue-chart\"), options);\n    chart.render();\n  }, // inits the map\n  Dashboard.prototype.initMaps = function () {\n    //various examples\n    if ($('#world-map-markers').length > 0) {\n      $('#world-map-markers').vectorMap({\n        map: 'world_mill_en',\n        normalizeFunction: 'polynomial',\n        hoverOpacity: 0.7,\n        hoverColor: false,\n        regionStyle: {\n          initial: {\n            fill: '#e3eaef'\n          }\n        },\n        markerStyle: {\n          initial: {\n            r: 9,\n            'fill': '#727cf5',\n            'fill-opacity': 0.9,\n            'stroke': '#fff',\n            'stroke-width': 7,\n            'stroke-opacity': 0.4\n          },\n          hover: {\n            'stroke': '#fff',\n            'fill-opacity': 1,\n            'stroke-width': 1.5\n          }\n        },\n        backgroundColor: 'transparent',\n        markers: [{\n          latLng: [40.71, -74.00],\n          name: 'New York'\n        }, {\n          latLng: [37.77, -122.41],\n          name: 'San Francisco'\n        }, {\n          latLng: [-33.86, 151.20],\n          name: 'Sydney'\n        }, {\n          latLng: [1.3, 103.8],\n          name: 'Singapore'\n        }],\n        zoomOnScroll: false\n      });\n    }\n  }, //initializing various components and plugins\n  Dashboard.prototype.init = function () {\n    var $this = this; // font\n    // Chart.defaults.global.defaultFontFamily = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif';        \n    // init charts\n\n    this.initCharts(); //init maps\n\n    this.initMaps();\n  }, //init flotchart\n  $.Dashboard = new Dashboard(), $.Dashboard.Constructor = Dashboard;\n}(window.jQuery), //initializing Dashboard\nfunction ($) {\n  \"use strict\";\n\n  $(document).ready(function (e) {\n    $.Dashboard.init();\n  });\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/ecommerce-dashboard.init.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/ecommerce-dashboard.init.js"]();
/******/ 	
/******/ })()
;